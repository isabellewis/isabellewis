// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`views/HeroPanel should match the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <HeroPanel />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": <TypingText
        textValues={
          Array [
            "Isabel",
            "Iz",
            "Izzy",
            "Is",
            "Izzy",
          ]
        }
      />,
      "id": "heroPanel",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "textValues": Array [
          "Isabel",
          "Iz",
          "Izzy",
          "Is",
          "Izzy",
        ],
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
    "type": Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": undefined,
      "componentStyle": ComponentStyle {
        "componentId": "HeroPanel__HeroWrapper-iDGzIU",
        "isStatic": true,
        "rules": Array [
          "animation:2s fadeIn 1;background:#000;display:block;min-height:100%;margin:0;overflow:hidden;padding:100px 30px;text-align:right;width:100%;@keyframes fadeIn{0%,30%{opacity:0;}100%{opactity:1;}}@media only screen and (min-width:576px){padding:200px 50px;}@media only screen and (min-width:992px){padding:300px 200px;}",
        ],
      },
      "displayName": "HeroPanel__HeroWrapper",
      "render": [Function],
      "styledComponentId": "HeroPanel__HeroWrapper-iDGzIU",
      "target": "div",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": <TypingText
          textValues={
            Array [
              "Isabel",
              "Iz",
              "Izzy",
              "Is",
              "Izzy",
            ]
          }
        />,
        "id": "heroPanel",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "textValues": Array [
            "Isabel",
            "Iz",
            "Izzy",
            "Is",
            "Izzy",
          ],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": undefined,
        "componentStyle": ComponentStyle {
          "componentId": "HeroPanel__HeroWrapper-iDGzIU",
          "isStatic": true,
          "rules": Array [
            "animation:2s fadeIn 1;background:#000;display:block;min-height:100%;margin:0;overflow:hidden;padding:100px 30px;text-align:right;width:100%;@keyframes fadeIn{0%,30%{opacity:0;}100%{opactity:1;}}@media only screen and (min-width:576px){padding:200px 50px;}@media only screen and (min-width:992px){padding:300px 200px;}",
          ],
        },
        "displayName": "HeroPanel__HeroWrapper",
        "render": [Function],
        "styledComponentId": "HeroPanel__HeroWrapper-iDGzIU",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
